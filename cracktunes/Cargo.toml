[package]
authors = ["Cycle Five <cycle.five@proton.me>"]
name = "cracktunes"
version = "0.3.5"
description = "Cracktunes is a hassle-free, highly performant, host-it-yourself, cracking smoking, discord-music-bot."
publish = true
edition = "2021"
license = "MIT"
keywords = ["music", "discord", "bot", "crack", "tunes", "cracktunes"]
categories = ["multimedia::audio"]
homepage = "https://cracktun.es/"
repository = "https://git.sr.ht/~cycle-five/cracktunes"

[features]
default = ["crack-tracing", "crack-telemetry", "ignore-presence-log"]
crack-gpt = ["dep:crack-gpt"]
crack-osint = ["dep:crack-osint"]
ignore-presence-log = []

crack-tracing = [
    "tracing-subscriber",
    "tracing-futures",
    "tracing-bunyan-formatter",
]
crack-metrics = [] # ["prometheus", "warp"]
crack-telemetry = [
    "opentelemetry",
    # "opentelemetry-otlp",
    # "opentelemetry-semantic-conventions",
    "tracing-opentelemetry",
]

[dependencies]
# core
crack-core = { workspace = true }
# modules, each should be optional
crack-osint = { workspace = true, optional = true }
crack-gpt = { workspace = true, optional = true }

# Core's dependencies
poise = { workspace = true }
tokio = { workspace = true }
songbird = { workspace = true }
symphonia = { workspace = true }
sqlx = { version = "0.7.4", features = [
    "runtime-tokio",
    "tls-rustls",
    "macros",
    "postgres",
    "chrono",
    "migrate",
    "json",
] }
async-tungstenite = { version = "0.25", features = [
    "tokio-rustls-webpki-roots",
] }
# tungstenite = "0.21"
async-trait = { version = "0.1.80" }
mockall = { version = "0.12.1" }
config-file = { version = "0.2.3", features = ["json"] }
dotenvy = "0.15.7"
colored = "2.1.0"
# Figure this one out better

# crack-telemetry
opentelemetry = { version = "0.22", optional = true }
# opentelemetry-otlp = { version = "0.15", features = [
#     "logs",
#     "metrics",
#     "trace",
# ], optional = true }
#
# which one of these is best?
# rt-tokio: Spawn telemetry tasks using tokio’s multi-thread runtime.
# rt-tokio-current-thread: Spawn telemetry tasks on a separate runtime so that the main runtime won’t be blocked.
#
opentelemetry_sdk = { version = "0.22.1", features = [
    "rt-tokio",
], optional = true }
# opentelemetry-semantic-conventions = { version = "0.14.0", optional = true }
tracing = { workspace = true }
tracing-opentelemetry = { version = "0.23.0", optional = true }
tracing-bunyan-formatter = { version = "0.3.9", optional = true }
tracing-appender = { version = "0.2.3", optional = true }
tracing-subscriber = { version = "0.3.18", features = [
    "env-filter",
], optional = true }
tracing-futures = { version = "0.2.5", optional = true }

# crack-metrics
# prometheus = { version = "0.13.3", features = ["process"], optional = true }
# warp = { version = "0.3.7", features = ["tls"], optional = true }

# # Is this even needed? What did I add it for?
# This is needed for the tests to run in the IDE

[dev-dependencies]
async-tungstenite = { version = "0.25", features = [
    "tokio-rustls-webpki-roots",
] }
sqlx = { version = "0.7.4", features = [
    "runtime-tokio",
    "tls-rustls",
    "macros",
    "postgres",
    "chrono",
    "migrate",
    "json",
] }
