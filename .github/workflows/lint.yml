name: Lint

on:
  workflow_call:

jobs:
  lint:
    name: Fmt and clippy
    strategy:
      matrix:
        rust-version: ['nightly', 'stable']
        cache-key: ['']
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      
      - name: "Install Rust"
        run: |
          rustup toolchain install ${{ matrix.rust-version }} --profile minimal --no-self-update
          rustup default ${{ matrix.rust-version }}
          rustup component add rustfmt clippy --toolchain ${{ matrix.rust-version }}
        shell: bash

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.cache-key }}

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres,sqlite

      - name: Migrate database
        env:
          DATABASE_URL: sqlite://./data/crackedmusic.db
        run: |
          sqlx database create
          sqlx migrate run --source migrations/
          cargo sqlx prepare --workspace -- --tests
        
      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        if: success() || failure()
        run: cargo clippy --all -- -D clippy::all -D warnings
        