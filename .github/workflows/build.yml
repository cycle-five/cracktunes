name: Main Workflow

on:
  workflow_call:

jobs:
  build:
    name: Build
    strategy:
      matrix:
        rust-version: ["nightly", "stable", "1.75", "1.76"]
        cache-key: [""]
    runs-on: ubuntu-latest
      # redis:
      #   image: redis:latest
      #   ports:
      #     - 6379/tcp

    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: "Install yt-dlp"
        run: |
          curl -sSL --output /usr/local/bin/yt-dlp https://github.com/yt-dlp/yt-dlp/releases/download/2024.04.09/yt-dlp_linux
          chmod +x /usr/local/bin/yt-dlp
        shell: bash

      - name: "Install Rust"
        run: |
          rustup toolchain install ${{ matrix.rust-version }} --profile minimal --no-self-update
          rustup install nightly
          rustup default ${{ matrix.rust-version }}
          rustup update
        shell: bash
      
      - uses: ikalnytskyi/action-setup-postgres@v4
        with:
          username: postgres
          password: mysecretpassword
          database: postgres
          port: 5432
        id: postgres

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.cache-key }}

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: Migrate database
        env:
          DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
          PG_USER: postgres
          PG_PASSWORD: mysecretpassword
        run: |
          sqlx database create
          sqlx migrate run --source migrations/
          cargo sqlx prepare --workspace -- --tests --all

      - name: Run Unit Tests
        if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
        env:
          VIRUSTOTAL_API_KEY: ${{secrets.VIRUSTOTAL_API_KEY}}
          DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
          PG_USER: postgres
          PG_PASSWORD: mysecretpassword
        run: cargo test --workspace

      - name: Run Release Unit Tests
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        env:
          VIRUSTOTAL_API_KEY: ${{secrets.VIRUSTOTAL_API_KEY}}
          DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
          PG_USER: postgres
          PG_PASSWORD: mysecretpassword
        run: cargo test --release --locked

      # - name: Build Binary
      #   if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
      #   run: cargo build --locked

      - name: Build Release Binary
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        env:
          VIRUSTOTAL_API_KEY: ${{secrets.VIRUSTOTAL_API_KEY}}
          DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
          PG_USER: postgres
          PG_PASSWORD: mysecretpassword
        run: cargo build --release --locked
