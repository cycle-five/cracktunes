[workspace]
members = ["cracktunes", "crack-core", "crack-osint", "crack-gpt", "crack-bf"]
resolver = "2"

[workspace.package]
edition = "2021"
license = "MIT"
authors = ["Cycle Five <cycle.five@proton.me>"]

[workspace.dependencies]
crack-core = { path = "crack-core", default-features = true, version = "0.3" }
crack-osint = { path = "crack-osint", default-features = true, version = "0.1" }
crack-gpt = { path = "crack-gpt", default-features = true, version = "0.2" }
crack-bf = { path = "crack-bf", default-features = true, version = "0.1" }

reqwest = { version = "0.12", default-features = false, features = [
  "blocking",
  "json",
  "multipart",
  "rustls-tls",
  "cookies",
] }
tracing = "0.1"
vergen = { version = "8", features = ["git", "cargo", "si", "build", "gitcl"] }


[workspace.dependencies.sqlx]
version = "0.7.4"
default-features = false
features = [
  "runtime-tokio",
  "tls-rustls",
  "macros",
  "postgres",
  "chrono",
  "time",
  "migrate",
  "json",
]

[workspace.dependencies.serenity]
version = "0.12"
git = "https://github.com/CycleFive/serenity"
branch = "current"
default-features = false
features = [
  "builder",
  "cache",
  "temp_cache",
  "collector",
  "client",
  "framework",
  "http",
  "gateway",
  "model",
  "utils",
  "rustls_backend",
  "unstable_discord_api",
  "voice",
]

[workspace.dependencies.songbird]
git = "https://github.com/cycle-five/songbird"
branch = "current"
version = "0.4"
features = ["driver", "serenity", "rustls", "receive", "builtin-queue"]

[workspace.dependencies.poise]
git = "https://github.com/cycle-five/poise"
branch = "current"
default-features = true
features = ["cache", "chrono"]

[workspace.dependencies.tokio]
version = "1.38"
default-features = false
features = ["macros", "rt", "rt-multi-thread", "signal", "sync", "io-util"]

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.17"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "homebrew", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
  "aarch64-apple-darwin",
  "x86_64-apple-darwin",
  "x86_64-unknown-linux-gnu",
  "x86_64-pc-windows-msvc",
]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false

[profile.release]
incremental = true
# Set this to 1 or 2 to get more useful backtraces in debugger.
debug = 0

[profile.release-with-debug]
inherits = "release"
debug = 1

[profile.release-with-performance]
inherits = "release"
lto = true
opt-level = 3

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
